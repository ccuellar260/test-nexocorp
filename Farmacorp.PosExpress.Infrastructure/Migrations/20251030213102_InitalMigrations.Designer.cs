// <auto-generated />
using System;
using Farmacorp.PosExpress.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Farmacorp.PosExpress.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251030213102_InitalMigrations")]
    partial class InitalMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Entities.CodigoBarra", b =>
                {
                    b.Property<int>("IdCodigoBarra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCodigoBarra"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("ErpProductoIdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("UniqueCodigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCodigoBarra");

                    b.HasIndex("ErpProductoIdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("CodigosBarras", (string)null);
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Entities.ErpProducto", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0.00m);

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Stock");

                    b.Property<string>("UniqueCodigo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdProducto");

                    b.HasIndex("UniqueCodigo")
                        .IsUnique()
                        .HasDatabaseName("IX_ErpProductos_UniqueCodigo")
                        .HasFilter("[UniqueCodigo] IS NOT NULL");

                    b.ToTable("ErpProductos", null, t =>
                        {
                            t.HasCheckConstraint("CK_ErpProductos_Costo", "[Costo] >= 0");

                            t.HasCheckConstraint("CK_ErpProductos_Stock", "[Stock] >= 0");
                        });
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Entities.ExpProducto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaVencimiento");

                    b.Property<int>("IdTipoProducto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Observaciones");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Precio");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdTipoProducto");

                    b.ToTable("ExpProductos", (string)null);
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Interfaces.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IdCategoriaPadre")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria");

                    b.HasIndex("IdCategoriaPadre");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Interfaces.ProductoCategoria", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProducto");

                    b.ToTable("ProductosCategorias", (string)null);
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Interfaces.TipoProducto", b =>
                {
                    b.Property<int>("IdTipoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoProducto"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTipoProducto");

                    b.ToTable("TiposProductos", (string)null);
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Entities.CodigoBarra", b =>
                {
                    b.HasOne("Farmacorp.PosExpress.Domain.Entities.ErpProducto", null)
                        .WithMany("CodigosBarras")
                        .HasForeignKey("ErpProductoIdProducto");

                    b.HasOne("Farmacorp.PosExpress.Domain.Entities.ExpProducto", "ExpProducto")
                        .WithMany("CodigosBarras")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpProducto");
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Entities.ErpProducto", b =>
                {
                    b.HasOne("Farmacorp.PosExpress.Domain.Entities.ExpProducto", "ExpProducto")
                        .WithOne("ErpProducto")
                        .HasForeignKey("Farmacorp.PosExpress.Domain.Entities.ErpProducto", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpProducto");
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Entities.ExpProducto", b =>
                {
                    b.HasOne("Farmacorp.PosExpress.Domain.Interfaces.TipoProducto", "TipoProducto")
                        .WithMany("ExpProductos")
                        .HasForeignKey("IdTipoProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoProducto");
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Interfaces.Categoria", b =>
                {
                    b.HasOne("Farmacorp.PosExpress.Domain.Interfaces.Categoria", "CategoriaPadre")
                        .WithMany()
                        .HasForeignKey("IdCategoriaPadre")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CategoriaPadre");
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Interfaces.ProductoCategoria", b =>
                {
                    b.HasOne("Farmacorp.PosExpress.Domain.Interfaces.Categoria", "Categoria")
                        .WithMany("ProductosCategorias")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Farmacorp.PosExpress.Domain.Entities.ExpProducto", "ExpProducto")
                        .WithMany("ProductosCategorias")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("ExpProducto");
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Entities.ErpProducto", b =>
                {
                    b.Navigation("CodigosBarras");
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Entities.ExpProducto", b =>
                {
                    b.Navigation("CodigosBarras");

                    b.Navigation("ErpProducto")
                        .IsRequired();

                    b.Navigation("ProductosCategorias");
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Interfaces.Categoria", b =>
                {
                    b.Navigation("ProductosCategorias");
                });

            modelBuilder.Entity("Farmacorp.PosExpress.Domain.Interfaces.TipoProducto", b =>
                {
                    b.Navigation("ExpProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
